{"remainingRequest":"C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\element-ui\\packages\\image\\src\\image-viewer.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\element-ui\\packages\\image\\src\\image-viewer.vue","mtime":499162500000},{"path":"C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\yujing\\Desktop\\vue\\Admin\\tt-shop\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}